package com.example.demo.controller;

import static org.hamcrest.CoreMatchers.containsString;
import static org.junit.jupiter.api.Assertions.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;

import com.example.demo.repository.PalindromeRepository;
import com.example.demo.service.PalindromeService;

@RunWith(SpringRunner.class)
@SpringBootTest
@WebMvcTest
class PalindromeControllerTest{
	@Autowired
    private MockMvc mockMvc;
 
    @MockBean
	public PalindromeRepository palindromeRepository;
	
    @MockBean
    private PalindromeService PalindromeService;

	@Test
	void testGetByInputString() throws Exception {
		String inputString="banana";
		this.mockMvc.perform(
				  get("/api/palindromes?inputString={banana}", "anana"));
		this.mockMvc.perform(get("/api/palindromes").param("inputString", inputString))
		.andDo(print())
	    .andExpect(status().isOk());
		
	}
	
}
